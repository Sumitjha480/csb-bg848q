{"version":3,"sources":["components/FrontPage.js","components/NavBar.js","components/AboutPage.js","components/Mapco/ButtonLoad.js","components/Mapco/GetLocation.js","components/Mapco/AnyReactComponent.js","components/Mapco/GetAddress.js","components/Mapco/Map.js","App.js","index.js"],"names":["FrontPage","classes","makeStyles","background","display","flexDirection","justifyContent","alignItems","width","height","backgroundPosition","backgroundRepeat","backgroundAttachment","backgroundSize","name","position","top","margin","fontWeight","topText","bottomText","fontSize","useStyles","Box","className","id","Typography","variant","align","IconButton","button","onClick","document","getElementById","scrollIntoView","behavior","NavBar","div","marginLeft","appBar","color","drawerPaper","backgroundColor","borderRadius","padding","text","span","textShadow","listItemText","useState","drawerOpen","setDrawerOpen","handleDrawerToggle","getLink","input","words","split","linkWords","forEach","element","push","toUpperCase","slice","length","toLowerCase","join","scrollTo","appBarButtons","Button","sideDrawer","Drawer","paper","anchor","open","onClose","ModalProps","keepMounted","List","map","index","ListItem","component","href","ListItemText","primary","AppBar","Toolbar","Hidden","xsDown","smUp","AboutPage","columnDiv","headerText","aboutText","marginTop","divider","bodyText","maxWidth","maxHeight","lineHeight","link","textDecoration","borderBottom","cursor","picture","marginBottom","boxShadow","Divider","root","ButtonLoad","props","setCords","setLoad","loadFunc","navigator","geolocation","getCurrentPosition","lat","coords","latitude","lng","longitude","zoom","GetLocation","AnyReactComponent","address","info","ref","fooRef","Geocode","setApiKey","setLanguage","setRegion","enableDebug","Map","showMap","load","setAddress","fromLatLng","then","response","results","formatted_address","GetAddress","defaultProps","center","bootstrapURLKeys","key","App","cords","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.6ab50521.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Box, Typography, IconButton, makeStyles } from \"@material-ui/core\";\r\n\r\nconst FrontPage = () => {\r\n  const useStyles = makeStyles({\r\n    background: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      width: \"100%\",\r\n      height: \"95vh\",\r\n      backgroundPosition: \"center top\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundAttachment: \"scroll\",\r\n      backgroundSize: \"cover\"\r\n    },\r\n    name: {\r\n      position: \"relative\",\r\n      top: \"6rem\",\r\n      margin: \"0.5rem 1rem\",\r\n      fontWeight: \"bold\"\r\n    },\r\n    topText: {\r\n      position: \"relative\",\r\n      top: \"6rem\",\r\n      margin: \"0 1.4rem\"\r\n    },\r\n    bottomText: {\r\n      position: \"relative\",\r\n      top: \"6rem\",\r\n      margin: \"0 1.4rem\",\r\n      fontSize: \"1.1rem\"\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const scrollTo = (id) => {\r\n    const element = document.getElementById(id);\r\n    element.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.background} id=\"Top\">\r\n      <Typography className={classes.topText} variant=\"h3\" align=\"center\">\r\n        Location on Map\r\n      </Typography>\r\n      {/* <Typography className={classes.name} variant=\"h2\" align=\"center\">\r\n        Sumit Kumar Jha.\r\n      </Typography> */}\r\n      {/* <Typography className={classes.bottomText} align=\"center\">\r\n        Computer Science Student, Web Developer, ML & Computer Vision\r\n        Enthusiast.\r\n      </Typography> */}\r\n      <IconButton\r\n        className={classes.button}\r\n        aria-label=\"Scroll Down\"\r\n        onClick={() => scrollTo(\"AboutMe\")}\r\n      >\r\n        {/* <span\r\n          className=\"iconify\"\r\n          data-icon=\"bi:chevron-compact-down\"\r\n          data-inline=\"false\"\r\n        /> */}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FrontPage;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  Hidden,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Box,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\n\r\nconst NavBar = () => {\r\n  const useStyles = makeStyles({\r\n    div: {\r\n      display: \"flex\",\r\n      marginLeft: \"auto\",\r\n      alignItems: \"center\"\r\n    },\r\n    appBar: {\r\n      background: \"primary\",\r\n      color: \"black\"\r\n    },\r\n    drawerPaper: {\r\n      width: \"60%\",\r\n      backgroundColor: \"#eeeeee\",\r\n      color: \"black\"\r\n    },\r\n    button: {\r\n      background: \"inherit\",\r\n      borderRadius: 3,\r\n      color: \"black\",\r\n      height: 40,\r\n      padding: \"0 1rem\",\r\n      margin: \"0 0.5rem\",\r\n      fontSize: \"0.9rem\"\r\n    },\r\n    text: {\r\n      fontSize: \"1.2rem\"\r\n    },\r\n    span: {\r\n      textShadow: \"1px 1px rgba(0, 0, 0, 0.3)\"\r\n    },\r\n    listItemText: {\r\n      fontSize: \"0.9rem\",\r\n      fontWeight: \"500\"\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setDrawerOpen(!drawerOpen);\r\n  };\r\n\r\n  const getLink = (input) => {\r\n    let words = input.split(\" \");\r\n    let linkWords = [];\r\n    words.forEach((element) => {\r\n      linkWords.push(\r\n        element[0].toUpperCase() +\r\n          element.slice(1, element.length).toLowerCase()\r\n      );\r\n    });\r\n    return linkWords.join(\"\");\r\n  };\r\n\r\n  const scrollTo = (id) => {\r\n    const element = document.getElementById(id);\r\n    element.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const appBarButtons = (\r\n    <Box className={classes.div}>\r\n      <Button className={classes.button} onClick={() => scrollTo(\"Last5\")}>\r\n        Last 5 Locations\r\n      </Button>\r\n      <Button className={classes.button} onClick={() => scrollTo(\"Details\")}>\r\n        About\r\n      </Button>\r\n    </Box>\r\n  );\r\n\r\n  const sideDrawer = (\r\n    <Box className={classes.div}>\r\n      <Drawer\r\n        variant=\"temporary\"\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n        anchor=\"right\"\r\n        open={drawerOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true\r\n        }}\r\n      >\r\n        <List onClick={handleDrawerToggle}>\r\n          {[\"Last 5 Location\", \"About\"].map((text, index) => (\r\n            <ListItem\r\n              button\r\n              component=\"a\"\r\n              key={text}\r\n              href={\"#\" + getLink(text)}\r\n            >\r\n              <ListItemText\r\n                primary={text}\r\n                classes={{ primary: classes.listItemText }}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <IconButton onClick={handleDrawerToggle}></IconButton>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.text}>\r\n          IOT Location Tracker\r\n        </Typography>\r\n        <Hidden xsDown>{appBarButtons}</Hidden>\r\n        <Hidden smUp>{sideDrawer}</Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Box, Typography, Divider, makeStyles } from \"@material-ui/core\";\r\n// import theme from \"../../theme/theme\";\r\n// import * as styles from \"../../theme/commonStyles\";\r\n// import picture from \"./../../images/picture.jpg\";\r\n\r\n// import SkillsPage from \"./SkillsPage\";\r\n// import ExperiencePage from \"./ExperiencePage\";\r\n\r\nconst AboutPage = () => {\r\n  const useStyles = makeStyles({\r\n    columnDiv: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\"\r\n    },\r\n    // mainDiv: {\r\n    //   [theme.breakpoints.down(\"xl\")]: {\r\n    //     width: \"45%\"\r\n    //   },\r\n    //   [theme.breakpoints.down(\"lg\")]: {\r\n    //     width: \"50%\"\r\n    //   },\r\n    //   [theme.breakpoints.down(\"md\")]: {\r\n    //     width: \"60%\"\r\n    //   },\r\n    //   [theme.breakpoints.down(\"sm\")]: {\r\n    //     width: \"80%\"\r\n    //   },\r\n    //   [theme.breakpoints.down(\"xs\")]: {\r\n    //     width: \"90%\"\r\n    //   },\r\n    //   margin: \"0 auto\"\r\n    // },\r\n    headerText: {\r\n      fontSize: \"1.8rem\",\r\n      fontWeight: \"bold\",\r\n      textShadow: \"0.1rem 0.1rem 0.1rem rgba(178, 223, 219, 0.8)\"\r\n    },\r\n    aboutText: {\r\n      marginTop: \"6rem\"\r\n    },\r\n    divider: {\r\n      backgroundColor: \"black\",\r\n      width: \"18rem\",\r\n      margin: \"1rem\",\r\n      marginTop: \"0\",\r\n      height: \"0.12rem\"\r\n    },\r\n    bodyText: {\r\n      fontSize: \"1.1rem\",\r\n      color: \"black\",\r\n      maxWidth: \"100%\",\r\n      maxHeight: \"100%\",\r\n      margin: \"1rem\",\r\n      lineHeight: \"1.6rem\"\r\n    },\r\n    link: {\r\n      color: \"black\",\r\n      textShadow: \"1px 1px #b2dfdb\",\r\n      textDecoration: \"none\",\r\n      borderBottom: \"1px solid #b2dfdb\",\r\n      \"&:hover\": {\r\n        color: \"#b2dfdb\",\r\n        cursor: \"pointer\"\r\n      }\r\n    },\r\n    picture: {\r\n      maxHeight: \"100%\",\r\n      maxWidth: \"100%\",\r\n      margin: \"1rem\",\r\n      marginBottom: \"6rem\",\r\n      width: \"40%\",\r\n      // [theme.breakpoints.down(\"md\")]: {\r\n      //   width: \"50%\"\r\n      // },\r\n      // [theme.breakpoints.down(\"sm\")]: {\r\n      //   width: \"60%\"\r\n      // },\r\n      // [theme.breakpoints.down(\"xs\")]: {\r\n      //   width: \"70%\"\r\n      // },\r\n      boxShadow: \"8px 8px 12px rgba(0, 0, 0, 0.25)\"\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n\r\n  // const scrollToContact = () => {\r\n  //   const element = document.getElementById(\"Contact\");\r\n  //   element.scrollIntoView({ behavior: \"smooth\" });\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <Box className={`${classes.columnDiv} `} id=\"AboutMe\">\r\n        <Typography className={`${classes.aboutText} ${classes.headerText}`}>\r\n          About Project\r\n        </Typography>\r\n        <Divider classes={{ root: classes.divider }} />\r\n        <Typography className={classes.bodyText}>\r\n          In this project, we'll make a location tracking system using Neo 6m\r\n          GPS Module and GSM 800c Sim. By making a few hardware and software\r\n          adjustments, this Tracking System can be utilized for Accident\r\n          Detection Alert System, Soldier Tracking System, and many other\r\n          applications.\r\n          {/* {\" \"} */}\r\n          {/* TODO - add resume link{\" \"} */}\r\n          {/* <Link\r\n            onClick={scrollToContact}\r\n            className={classes.link}\r\n            underline=\"none\"\r\n          >\r\n            contact information and links here\r\n          </Link> */}\r\n          .\r\n        </Typography>\r\n        {/* <Box\r\n          component=\"img\"\r\n          src={picture}\r\n          alt=\"A picture of me\"\r\n          className={classes.picture}\r\n        /> */}\r\n      </Box>\r\n      {/* <SkillsPage />\r\n      <ExperiencePage /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport GetLocation from \"./GetLocation\";\r\n\r\n//functional component that displays find me button on screen\r\nexport default function ButtonLoad(props) {\r\n  const { setCords, setLoad } = props;\r\n  const loadFunc = () => {\r\n    GetLocation(setCords);\r\n    setLoad(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\" d-flex justify-content-center\">\r\n        <Button onClick={() => loadFunc()}> Find Me</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nButtonLoad.propTypes = {\r\n  setCords: PropTypes.func,\r\n  setLoad: PropTypes.func\r\n};\r\n","//function that finds your current location by lat and lng\r\nexport default function GetLocation(setCords) {\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(showPosition);\r\n  }\r\n  function showPosition(position) {\r\n    setCords({\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude,\r\n      zoom: 12\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n//functional component that displays marker on screen\r\nexport default function AnyReactComponent(props) {\r\n  const { lat, lng, address } = props;\r\n  //saves all of the information into a string\r\n  const info = `Lat: ${lat} <br>\r\n                Lng: ${lng} <br>\r\n                Address: ${address} `;\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"pin\"\r\n        ref={(ref) => (this.fooRef = ref)}\r\n        data-tip={info}\r\n        data-multiline={true}\r\n        data-background-color={\"black\"}\r\n      />\r\n      <ReactTooltip />\r\n    </div>\r\n  );\r\n}\r\n\r\nAnyReactComponent.propTypes = {\r\n  lat: PropTypes.number,\r\n  lng: PropTypes.number,\r\n  address: PropTypes.string,\r\n  load: PropTypes.bool\r\n};\r\n","import Geocode from \"react-geocode\";\r\n\r\n// set Google Maps Geocoding API for purposes of quota management. Its optional but recommended.\r\nGeocode.setApiKey(\"AIzaSyC2EnyDBamB9KpzatULxDK8NLEdByw8n5M\");\r\n\r\n// set response language. Defaults to english.\r\nGeocode.setLanguage(\"en\");\r\n\r\n// set response region. Its optional.\r\n// A Geocoding request with region=es (Spain) will return the Spanish city.\r\nGeocode.setRegion(\"es\");\r\n\r\n// Enable or disable logs. Its optional.\r\nGeocode.enableDebug();\r\n\r\n//function that gets address information for a set of lat and lng cords\r\nexport default function getAddressInformation(setAddress, lat, lng) {\r\n  Geocode.fromLatLng(lat, lng).then((response) => {\r\n    setAddress(response.results[0].formatted_address);\r\n  });\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport AnyReactComponent from \"./AnyReactComponent\";\r\nimport GetAddress from \"./GetAddress\";\r\nimport \"./Styles.css\";\r\n\r\n//functional component that displays map on screen\r\nexport default function Map(props) {\r\n  const { lat, lng, zoom, load } = props;\r\n  //the key that I was provided was not working so I used my own key\r\n  const key = \"AIzaSyC2EnyDBamB9KpzatULxDK8NLEdByw8n5M\";\r\n  const [address, setAddress] = useState(\"\");\r\n  let showMap;\r\n  GetAddress(setAddress, lat, lng);\r\n  const defaultProps = {\r\n    center: {\r\n      lat: lat,\r\n      lng: lng\r\n    },\r\n    zoom: zoom\r\n  };\r\n  //Conditional Rendering for if the user has clicked the find me button.\r\n  //If user has not clicked the find me button then marker will not be displayed\r\n  if (load) {\r\n    showMap = <AnyReactComponent lat={lat} lng={lng} address={address} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div id=\"mapHW\">\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: key }}\r\n          center={defaultProps.center}\r\n          zoom={defaultProps.zoom}\r\n        >\r\n          {showMap}\r\n        </GoogleMapReact>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMap.propTypes = {\r\n  setCords: PropTypes.func,\r\n  lat: PropTypes.number,\r\n  lng: PropTypes.number\r\n};\r\n","// import \"./styles.css\";\n// import { HashRouter, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport FrontPage from \"./components/FrontPage\";\nimport React, { useState } from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport AboutPage from \"./components/AboutPage\";\nimport GoogleMapReact from \"google-map-react\";\nimport Button from \"./components/Mapco/ButtonLoad\";\nimport Map from \"./components/Mapco/Map\";\n// import theme from \"./components/theme\";\n\n// const website = (\n//   <div>\n//     <NavBar />\n//     {/* <FrontPage />\n//     <AboutPage /> */}\n//     {/* <Footer /> */}\n//   </div>\n// );\n\nexport default function App() {\n  const [load, setLoad] = useState(false);\n\n  //default lat & lng values of 25.597042 & -24.138926\n  const [cords, setCords] = useState({\n    lat: 28.60957,\n    lng: 77.035271,\n    zoom: 10\n  });\n\n  // export const getLatFromURL = () =>{\n  //   return window.location.hash\n  //   .substring(1)\n  //   .split('&')\n  //   .reduce((initial,item))=>{\n  //     let parts=item.split('=');\n  //     initial[parts[0]]=decodeURIComponent(parts[1])\n  //     return initial;\n  //   }, {});\n  // }\n\n  // export const getLonFromURL = () =>{\n  //   return window.location.hash\n  //   .substring(2)\n  //   .split('&')\n  //   .reduce((initial,item))=>{\n  //     let parts=item.split('=');\n  //     initial[parts[0]]=decodeURIComponent(parts[1])\n  //     return initial;\n  //   }, {});\n  // }\n\n  return (\n    <div>\n      <NavBar />\n      <FrontPage />\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: \"AIzaSyANrSZmh9Dzui1tXkC9H6R72Jv_03JxGcE\" }}\n        defaultCenter={{ lat: 29.68402678282475, lng: -8.320964890236837 }}\n        defaultZoom={2}\n        yesIWantToUseGoogleMapApiInternals\n      ></GoogleMapReact>\n      <Button setCords={setCords} setLoad={setLoad} />\n      <Map lat={cords.lat} lng={cords.lng} zoom={cords.zoom} load={load} />\n      <AboutPage />\n    </div>\n\n    // <NavBar />\n    // <div className=\"App\">\n    //   <h1>Hello CodeSandbox</h1>\n    //   <h2>Start editing to see some magic happen!</h2>\n    // </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}